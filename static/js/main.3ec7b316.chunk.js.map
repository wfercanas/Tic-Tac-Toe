{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","i","squares","renderSquare","Game","state","history","Array","fill","xIsNext","stepNumber","slice","squaresCopy","length","map","item","calculateWinner","setState","concat","step","status","current","winner","moves","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kOAIMA,E,4JACJ,WAAU,IAAD,OACP,OACE,wBACEC,UAAU,SACVC,QAAS,WACP,EAAKC,MAAMD,WAHf,SAMGE,KAAKD,MAAME,Y,GATCC,IAAMC,WAerBC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OACE,cAACT,EAAD,CACEK,MAAOD,KAAKD,MAAMO,QAAQD,GAC1BP,QAAS,WACP,EAAKC,MAAMD,QAAQO,Q,oBAM3B,WACE,OACE,gCACE,sBAAKR,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKV,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKV,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GA5BTL,IAAMC,WAmCpBK,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,QAAS,CACP,CACEJ,QAASK,MAAM,GAAGC,KAAK,QAG3BC,SAAS,EACTC,WAAY,GATG,E,+CAanB,SAAYT,GACV,IAAMK,EAAUV,KAAKS,MAAMC,QAAQK,MAAM,EAAGf,KAAKS,MAAMK,WAAa,GAE9DE,EADUN,EAAQA,EAAQO,OAAS,GACbX,QAAQY,KAAI,SAACC,GAAD,OAAUA,KAC9CC,EAAgBJ,IAAgBA,EAAYX,KAGhDW,EAAYX,GAAKL,KAAKS,MAAMI,QAAU,IAAM,IAC5Cb,KAAKqB,SAAS,CACZX,QAASA,EAAQY,OAAO,CACtB,CACEhB,QAASU,KAGbH,SAAUb,KAAKS,MAAMI,QACrBC,WAAYJ,EAAQO,Y,oBAIxB,SAAOM,GACLvB,KAAKqB,SAAS,CACZP,WAAYS,EACZV,QAASU,EAAO,IAAM,M,oBAI1B,WAAU,IAcJC,EAdG,OACDd,EAAUV,KAAKS,MAAMC,QACrBe,EAAUf,EAAQV,KAAKS,MAAMK,YAC7BY,EAASN,EAAgBK,EAAQnB,SAEjCqB,EAAQjB,EAAQQ,KAAI,SAACK,EAAMK,GAC/B,IAAMC,EAAOD,EAAI,sBAAkBA,GAAS,mBAC5C,OACE,6BACE,wBAAQ9B,QAAS,kBAAM,EAAKgC,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OALEJ,EADEE,EACI,kBAAcA,GAEd,uBAAmB1B,KAAKS,MAAMI,QAAU,IAAM,KAIpD,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACO,EAAD,CACEE,QAASmB,EAAQnB,QACjBR,QAAS,SAACO,GACR,EAAK0B,YAAY1B,QAIvB,sBAAKR,UAAU,YAAf,UACE,8BAAM2B,IACN,6BAAKG,c,GAzEIzB,IAAMC,WAgFzB,SAASiB,EAAgBd,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA3B,EAAI,EAAGA,EAAI2B,EAAMf,OAAQZ,IAAK,CACrC,kBAAkB2B,EAAM3B,GAAxB,GAAO4B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAKTG,IAASC,OAAO,cAAC7B,EAAD,IAAU8B,SAASC,eAAe,W","file":"static/js/main.3ec7b316.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Square extends React.Component {\n  render() {\n    return (\n      <button\n        className=\"square\"\n        onClick={() => {\n          this.props.onClick();\n        }}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => {\n          this.props.onClick(i);\n        }}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      xIsNext: true,\n      stepNumber: 0,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squaresCopy = current.squares.map((item) => item);\n    if (calculateWinner(squaresCopy) || squaresCopy[i]) {\n      return;\n    }\n    squaresCopy[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([\n        {\n          squares: squaresCopy,\n        },\n      ]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move #${move}` : 'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => {\n              this.handleClick(i);\n            }}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}